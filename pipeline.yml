---
resource_types:
- name: keyval
  type: docker-image
  source:
    repository: swce/keyval-resource 


resources:
- name: nginx-release
  type: git
  source:
    uri: git@github.com:mgurke/nginx-release.git
    branch: master
    private_key: ((priv_key))
- name: nginx-pipeline
  type: git
  source:
    uri: git@github.com:mgurke/nginx-pipeline.git
    branch: master
    private_key: ((priv_key))
- name: keyval
  type: keyval
- name: trigger-test
  type: keyval  
- name: trigger-tag
  type: keyval  


      

jobs:
- name: create-release
  public: true
  plan:
  - get: nginx-release
    trigger: true
  - get: nginx-pipeline  
    trigger: true
  - task: create-release
    file: nginx-pipeline/tasks/create-release.yml
    params:
        BOSH_CLIENT: ((bosh_client))
        BOSH_CLIENT_SECRET: ((bosh_client_secret))
        BOSH_ENVIRONMENT: ((bosh_url))
        BOSH_CA_CERT: "((bosh_ca_cert))"
        BOSH_ALIAS: ((bosh_alias))
        BOSH_IP: ((bosh_ip))
        URL_NGINX_RELEASE: ((nginx-release))
        URL_PCRE_RELEASE: ((pcre-release))
        NGINX_VERSION: ((nginx-version))
        PCRE_VERSION: ((pcre-version))
        DEPLOYMENT_NAME: ((deployment_name))
  - put: keyval
    params:
      file: keyval/keyval.properties

- name: deploy-nginx
  public: true 
  plan:
  - get: keyval
    trigger: true
    passed:
    - create-release
  - get: nginx-release
  - get: nginx-pipeline  
  - task: deploy-release
    file: nginx-pipeline/tasks/deploy-release.yml
    params:
        BOSH_CLIENT: ((bosh_client))
        BOSH_CLIENT_SECRET: ((bosh_client_secret))
        BOSH_ENVIRONMENT: ((bosh_url))
        BOSH_CA_CERT: "((bosh_ca_cert))"
        BOSH_ALIAS: ((bosh_alias))
        BOSH_IP: ((bosh_ip))
        URL_NGINX_RELEASE: ((nginx-release))
        URL_PCRE_RELEASE: ((pcre-release))
        NGINX_VERSION: ((nginx-version))
        PCRE_VERSION: ((pcre-version))
        DEPLOYMENT_NAME: ((deployment_name))
  - put: trigger-test
    params:
      file: trigger-test/trigger.properties
    


- name: test deployment
  public: true
  plan:
  - get: trigger-test
    trigger: true
    passed:
    - deploy-nginx
  - get: nginx-pipeline
    trigger: false
  - task: test deployment
    file: nginx-pipeline/tasks/test-deployment.yml
    params:
        PROPERTIES_FILE: trigger-test/trigger.properties
  - put: trigger-tag
    params:
      file: trigger-tag/trigger.properties

#- name: tag
#  public: true
#  plan:
#  - get: trigger-tag
#    trigger: true
#    passed:
#    - test deployment
#  - get: deploy nginx
#    trigger: false
#  - get: test deployment
#    trigger: false
#  - task: tag version
#    file: nginx-pipeline/tasks/tag-version.yml
#    params:
#      repository: nginx-pipeline
#      only_tag: true
#      file: version-tag/version
